{
  "info": {
    "_postman_id": "b162ef8c-9501-404f-8b87-2eb1f8e8643c",
    "name": "Oidcprovider API",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "getToken",
      "item": [
        {
          "name": "getJWTGrant",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f44f369f-1324-43da-b54a-5f3623f935f0",
                "exec": [
                  "pm.globals.set(\"oidc_maskinporten_assertion\",pm.response.text());"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "8b718eb4-7902-40af-9866-52e18aa212c9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{jwt_grant_url}}?issuer={{client_id}}&audience={{oidc_provider}}&scope=idporten:dcr.read idporten:dcr.write idporten:dcr.modify",
              "host": [
                "{{jwt_grant_url}}"
              ],
              "query": [
                {
                  "key": "issuer",
                  "value": "{{client_id}}"
                },
                {
                  "key": "audience",
                  "value": "{{oidc_provider}}"
                },
                {
                  "key": "scope",
                  "value": "idporten:dcr.read idporten:dcr.write idporten:dcr.modify"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "get Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "416da3b2-30f6-432e-947c-5c2090f62993",
                "exec": [
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData=pm.response.json();",
                  "    pm.globals.set(\"access_token_sp\",jsonData.access_token);",
                  "",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "c5d17cd0-b6ee-4ced-afb9-66238f1c10c1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/x-www-form-urlencoded",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
                  "type": "text"
                },
                {
                  "key": "assertion",
                  "value": "{{oidc_maskinporten_assertion}}",
                  "type": "text"
                }
              ],
              "options": {
                "urlencoded": {}
              }
            },
            "url": "{{oidc_provider_url}}/idporten-oidc-provider/token"
          },
          "response": []
        }
      ],
      "_postman_id": "6e4ebe69-5fe1-4c6c-82ec-e56fe28c1938"
    },
    {
      "name": "/token invalid grant test (grant has used)",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "4bf7af09-414c-4b1b-8c0d-8fa6422b7038",
            "exec": [
              "",
              "pm.test(\"invalid_grant should return 400\", function () {",
              "    pm.response.to.have.status(400);",
              "    var jsonData=pm.response.json();",
              "    console.log(\"values\"+jsonData.error);",
              "    var error=jsonData.error;",
              "    pm.expect(jsonData.error).to.include(\"invalid_grant\");",
              "    pm.expect(jsonData.error_description).to.be.that.include(\"Invalid assertion. Client authentication failed. Expired JWT.\");",
              "    ",
              "  ",
              "console.log(\"values\"+jsonData.error_description);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "32df9a2b-f45d-41a8-921e-ada196775aca",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/x-www-form-urlencoded",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            {
              "key": "grant_type",
              "value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
              "type": "text"
            },
            {
              "key": "assertion",
              "value": "{{assertion}}",
              "type": "text"
            }
          ],
          "options": {
            "urlencoded": {}
          }
        },
        "url": "{{oidc_provider}}/token"
      },
      "response": []
    },
    {
      "name": "getTokensElements",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "02b4c223-cb45-4310-b064-d60510887571",
            "exec": [
              "pm.test(\"tokens\", function () {",
              " var jsonData = pm.response.json();",
              " console.log('tokens test jsonData',jsonData);",
              " var tokens=jsonData.value;",
              "  console.log('tokens test tokens',tokens);",
              " var temptoken=tokens.split('access_token:').pop();",
              "   console.log('tokens test temptoken',temptoken);",
              " var refreshtokenpos=temptoken.lastIndexOf(\"refresh_token:\");",
              "    console.log('tokens test refreshtokenpos',refreshtokenpos);",
              " var token = temptoken.substring(1,refreshtokenpos-1);    ",
              " pm.environment.set(\"oidctoken\", token);",
              "     console.log('oidctoken test token',token);",
              "console.log('oidctoken',pm.environment.get(\"oidctoken\"));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "effb2838-de91-4e50-b13b-1f254f1f47bb",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": "http://localhost:9515/session/{{session}}/source"
      },
      "response": []
    },
    {
      "name": "/tokeninfo",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "9e64abfc-00a1-49d4-99b5-3a34a0641dd5",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "    ",
              "        var jsonData=pm.response.json();",
              "pm.environment.set(\"auth_id\",jsonData.active);",
              "    pm.expect(jsonData.active).to.eql(true);",
              "    pm.expect(jsonData.client_id).to.eql(\"oidc_test_api-postman\");",
              "    pm.expect(jsonData.client_orgno).to.eql(\"991825827\");",
              "    pm.expect(jsonData.delegation_source).to.eql(\"https://eid-systest-web01.dmz.local/idporten-oidc-provider/\");",
              "",
              "",
              "});",
              "",
              "pm.test(\"expires_in should be above 0\", function () {",
              "    var jsonData=pm.response.json();",
              "        var exp= jsonData.exp;",
              "    var iat= jsonData.iat;",
              "    var expires_in=exp-iat;",
              "        console.log('oidctoken test iat',iat);",
              "     console.log('oidctoken test expires_in',expires_in);",
              "    pm.expect(expires_in).to.be.above(0);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "52ce75ec-30e0-47f6-ac30-144f7330c09d",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/x-www-form-urlencoded",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            {
              "key": "token",
              "value": "{{oidctoken}}",
              "type": "text"
            }
          ]
        },
        "url": "{{oidc_provider}}/tokeninfo"
      },
      "response": []
    },
    {
      "name": "/userinfo",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "5b377bbe-83c8-4893-a836-096ea3e592ce",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "   ",
              "    ",
              "        var jsonData=pm.response.json();",
              "   ",
              "   pm.environment.set(\"auth_id\",jsonData.active);",
              "    pm.expect(jsonData.pid).to.eql(\"23079403164\");",
              "    pm.expect(jsonData.locale).to.eql( \"nb\");",
              "    ",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "7385fdde-5dab-4aef-ad0c-95ffe112728e",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": {
            "token": "{{oidctoken}}"
          }
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/x-www-form-urlencoded",
            "type": "text"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": []
        },
        "url": "{{oidc_provider}}/userinfo"
      },
      "response": []
    },
    {
      "name": "/token invalid grant test (expired grant )",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "4bf7af09-414c-4b1b-8c0d-8fa6422b7038",
            "exec": [
              "",
              "pm.test(\"invalid_grant should return 400\", function () {",
              "    pm.response.to.have.status(400);",
              "    var jsonData=pm.response.json();",
              "    console.log(\"values\"+jsonData.error);",
              "    var errorvalues=jsonData.error;",
              "    pm.expect(jsonData.error).to.include(\"invalid_grant\");",
              "    pm.expect(jsonData.error_description).to.include(\"Invalid assertion. Client authentication failed. Expired JWT.\");",
              " });"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "ae3ed213-bf5b-477c-9604-bb35535056f5",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/x-www-form-urlencoded",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            {
              "key": "grant_type",
              "value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
              "type": "text"
            },
            {
              "key": "assertion",
              "value": "eyJ4NWMiOlsiTUlJRkVUQ0NBXC9tZ0F3SUJBZ0lMQVVrblRnempPNTM2MHk4d0RRWUpLb1pJaHZjTkFRRUxCUUF3VVRFTE1Ba0dBMVVFQmhNQ1RrOHhIVEFiQmdOVkJBb01GRUoxZVhCaGMzTWdRVk10T1Rnek1UWXpNekkzTVNNd0lRWURWUVFEREJwQ2RYbHdZWE56SUVOc1lYTnpJRE1nVkdWemREUWdRMEVnTXpBZUZ3MHhOekEyTVRJd09EVTJNVEZhRncweU1EQTJNVEl5TVRVNU1EQmFNSGN4Q3pBSkJnTlZCQVlUQWs1UE1Td3dLZ1lEVlFRS0RDTkVTVkpGUzFSUFVrRlVSVlFnUms5U0lFWlBVbFpCVEZST1NVNUhJRTlISUVsTFZERVNNQkFHQTFVRUN3d0pUMGxFUXlCMFpYTjBNUkl3RUFZRFZRUUREQWxFU1VaSklGUkZVMVF4RWpBUUJnTlZCQVVUQ1RrNU1UZ3lOVGd5TnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmduVWJpWFBtZ0E4T0J4blBhNFpsUkhLTlNpUjFPUUlqMXdZS0hyejRVMUhvV21HNStWVFpQWGJobVJ4MjBsR3FRV3JDMG1xVjJsXC9CclNUVHBNdW1vdFBNV01RTW1sVXdXcTBBWGRRRHgzSDVCR1lhNjZzVjU2eEl2QzRsektJMkVBR2pzeGRkZThYdzdheXBFNXVKXC9PVk15Y2JcL3c2bHFvRGlzOHRIeGlOMEs0WitJbFVMdnBmQ1k1NlA3QytjdVN6RlU3VVlramJ6OStYdVdabGdKRmZ3MmpBQVhnNnN6elorbHZsZUFJKzZvVXUzSGZwbnVKZUJST1wveGZEdmtjXC8wY0lQRlJIQUVlWjhuUXdic0VpK09WU0VGeVludFNXM1MwUGI5WW1KazBDSWl1Y0xuVlhKNVZCd3lsNldzYkRyY2tZZDZKT21iWEpHRVRcL050ZWhNQ0F3RUFBYU9DQWNJd2dnRytNQWtHQTFVZEV3UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVA2NzFlQXVTbzNBZ05WOWErdmNrb0ZJQjhFRXdIUVlEVlIwT0JCWUVGRWV5ZGR0S2tjZGl5RnR5dmIxblp3d0ViblRBTUE0R0ExVWREd0VCXC93UUVBd0lHUURBV0JnTlZIU0FFRHpBTk1Bc0dDV0NFUWdFYUFRQURBakNCdXdZRFZSMGZCSUd6TUlHd01EZWdOYUF6aGpGb2RIUndPaTh2WTNKc0xuUmxjM1EwTG1KMWVYQmhjM011Ym04dlkzSnNMMEpRUTJ4aGMzTXpWRFJEUVRNdVkzSnNNSFdnYzZCeGhtOXNaR0Z3T2k4dmJHUmhjQzUwWlhOME5DNWlkWGx3WVhOekxtNXZMMlJqUFVKMWVYQmhjM01zWkdNOVRrOHNRMDQ5UW5WNWNHRnpjeVV5TUVOc1lYTnpKVEl3TXlVeU1GUmxjM1EwSlRJd1EwRWxNakF6UDJObGNuUnBabWxqWVhSbFVtVjJiMk5oZEdsdmJreHBjM1F3Z1lvR0NDc0dBUVVGQndFQkJINHdmREE3QmdnckJnRUZCUWN3QVlZdmFIUjBjRG92TDI5amMzQXVkR1Z6ZERRdVluVjVjR0Z6Y3k1dWJ5OXZZM053TDBKUVEyeGhjM016VkRSRFFUTXdQUVlJS3dZQkJRVUhNQUtHTVdoMGRIQTZMeTlqY25RdWRHVnpkRFF1WW5WNWNHRnpjeTV1Ynk5amNuUXZRbEJEYkdGemN6TlVORU5CTXk1alpYSXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRWNqS3FKdTNOb2FPRUNZVGVrNjZ3TmZqVzlpUnowVllMbHBiYzVBRkVjMmN1RWlld05SNlNoME1vNFRmeFpEVkFsaTJaaUVXYytybHZGYVMyaGJlYlIrYktVcnlQY1ZGU0NBdEM3MkQ0amE2ek1qdStOcHZFZXRUbjZrODFXZ2ZzZ2p4NlhOakpZY1wvNlFOanZUNE4yMmFkRXd5TXZoRThsamtTZzRkXC91ZFF5aTJEUWRIdDBTaHFcL1dLMDY4TitoS1JnK1JJSWRDdTZJbDlGU25keVlPMGF6V1pwY2p1akhWSDdwOHFLVlo1OEc4N0hEaUM2RmNwZVpCT216VFwvTzdYaVN5MTQxVTQzSmVGS0JYa1Z1cEMwT1lQb3NZR1BubXpFeHFXTHliZ2tiT1wvZFNsOG9EVHpJSWlmdnh5Q2QyaU1FQWMwNytPdUVlZkVUekF4anFCSE09Il0sImFsZyI6IlJTMjU2In0.eyJhdWQiOiJodHRwczpcL1wvZWlkLXN5c3Rlc3Qtd2ViMDEuZG16LmxvY2FsXC9pZHBvcnRlbi1vaWRjLXByb3ZpZGVyXC8iLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGlkcG9ydGVuOnNjb3Blcy53cml0ZSBpZHBvcnRlbjpzY29wZXMucmVhZCB0b2tlbmluZm8gaWRwb3J0ZW46YXV0aG9yaXphdGlvbnMucmV2b2tlIiwiaXNzIjoib2lkY190ZXN0X2FwaS1wb3N0bWFuIiwiZXhwIjoxNTY4MTk2NjE2LCJpYXQiOjE1NjgxOTY0OTYsImp0aSI6ImU1ZTU4ZDIzLWJjMjYtNDU0Mi1iMDkyLTgzNmE4OGMzYzg2NiJ9.bQpiG8MGSafrmpLAu948MQnW2EtZCunc4PMtYGeuW3FGxQtZVvRtN5_OWgRQWIubCOH4rzQARtEz52uuO4vo1kbMtUSr6H5ZHUGq1OPYW_9evj98uFeUbWlB-Xt4CS7bG0LhuFjlF7guG23jLG4yvhxwZW_PCR8ettbhbzAm-GqFExfXvXk6M2hJUzKWGt0VPAGvS3wf1gOlc9-D8lV0yk2abJGHDEofYdsltlguNX5he6xA5QQyF-Qy8kEgJnLHQl6tsnq-EOMgT3FVKJ0rg_kwpnnz_Q61h_Hn7SZBmD_CSuSEyDwm20yMIzyb1uca9SRkfk8vXchdL83V2gCwhA",
              "type": "text"
            }
          ]
        },
        "url": "{{oidc_provider}}/token"
      },
      "response": []
    }
  ]
}