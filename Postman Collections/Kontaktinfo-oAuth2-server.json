{
  "info": {
    "_postman_id": "a4a7f145-3ebe-4ab0-94bf-f6da4cb6cdc6",
    "name": "Kontaktinfo-oAuth2-server",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Hente gyldig accesstoken med riktig scope",
      "item": [
        {
          "name": "seleniumsession",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d8b2c24d-e0ff-4735-a53e-d1fd6c1e91b7",
                "exec": [
                  "var jsonData=pm.response.json();",
                  "pm.globals.set(\"session\",jsonData.sessionId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f5de00c8-49a3-4411-9e39-b171b123f1d3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"desiredCapabilities\": {\r\n        \"caps\": {\r\n            \"nativeEvents\": false,\r\n            \"browserName\": \"chrome\",\r\n            \"version\": \"\",\r\n            \"platform\": \"ANY\"\r\n        }\r\n    }\r\n}"
            },
            "url": "http://localhost:9515/session",
            "description": "\n"
          },
          "response": []
        },
        {
          "name": "redirecturl",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f32d6f05-2e34-4788-9d50-03fd801eb09e",
                "exec": [
                  "",
                  "pm.environment.get(\"oidc_url_serviceprovider\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "30f038ed-c3d6-4297-8f79-cfd406a76f2f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"url\":\"{{idporten_oidc_client_url}}\"}\n"
            },
            "url": "http://localhost:9515/session/{{session}}/url"
          },
          "response": []
        },
        {
          "name": "findclientelementid",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1d20f14d-4667-407b-b870-4b0051ebd97b",
                "exec": [
                  "pm.test(\"find element id for client_id \", function () {",
                  "    var jsonData = pm.response.json();",
                  " pm.globals.set(\"clientid\", jsonData.value.ELEMENT);",
                  " ",
                  "console.log(pm.globals.get(\"clientid\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "0250a234-106e-4cc6-ad8f-e2cf8d003991",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"using\":\"name\",\"value\":\"client_id\"}"
            },
            "url": "http://localhost:9515/session/{{session}}/element"
          },
          "response": []
        },
        {
          "name": "selectdropdown",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a9c5f504-80da-4b67-bd66-86c7cb3558c4",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "53c1e156-7820-4adf-8ae5-3f221fb08694",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\r\n{\r\n\t\"value\":{{client_drop_down}}\r\n}"
            },
            "url": "http://localhost:9515/session/{{session}}/element/{{clientid}}/value"
          },
          "response": []
        },
        {
          "name": "findscopeid",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1d20f14d-4667-407b-b870-4b0051ebd97b",
                "exec": [
                  "pm.test(\"Scope element id\", function () {",
                  "    var jsonData = pm.response.json();",
                  " pm.globals.set(\"scope\", jsonData.value.ELEMENT);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "caa7d47c-5170-4d52-9cf9-c7a61bc6b171",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"using\":\"name\",\"value\":\"scope\"}"
            },
            "url": "http://localhost:9515/session/{{session}}/element"
          },
          "response": []
        },
        {
          "name": "setscope",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "e65befc8-4e49-43f6-a2bc-3ebfdc77a6dc",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "81beebca-ac72-4d35-a647-b36424664f8a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"value\":[\"    krr:user.log.all.read idporten:user.log.read global/kontaktinformasjon.read idporten:dcr.write idporten:user.log.all.read user/sikkerdigitalpost.read dsf-adresse global/sertifikat.read global/varslingsstatus.read idporten:dcr.modify idporten:authorizations.revoke dsf-navn tokeninfo user/spraak.read idporten:tokenexchange idporten:scopes.read user/sertifikat.read user/digitalpost.read idporten:scopes.write user/spraak.write samarbeid:sp-web idporten:authorizationstest.read user/kontaktinformasjon.read\"]}"
            },
            "url": "http://localhost:9515/session/{{session}}/element/{{scope}}/value"
          },
          "response": []
        },
        {
          "name": "findloginelementid",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1d20f14d-4667-407b-b870-4b0051ebd97b",
                "exec": [
                  "pm.test(\"Your test name\", function () {",
                  "    var jsonData = pm.response.json();",
                  " pm.globals.set(\"loginid\", jsonData.value.ELEMENT);",
                  "",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ba3e96a8-06b1-416b-880c-f6d1ec230c2f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"using\":\"id\",\"value\":\"login\"}"
            },
            "url": "http://localhost:9515/session/{{session}}/element"
          },
          "response": []
        },
        {
          "name": "clicklogin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a9c5f504-80da-4b67-bd66-86c7cb3558c4",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "5f95f475-e14e-4a9f-9448-803200c232cd",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "a89af9c5-52e6-4e32-b8a8-14eb0059a31b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://localhost:9515/session/{{session}}/element/{{loginid}}/click"
          },
          "response": []
        },
        {
          "name": "elementonthispage",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4d4bd4ba-154b-4b05-923d-64e1d36be0a1",
                "exec": [
                  "pm.test(\"element if for MinID \", function () {",
                  "    var jsonData = pm.response.json();",
                  " pm.globals.set(\"minid_elementid\", jsonData.value.ELEMENT);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "52d1a165-8ed9-4787-bb22-131016ada2b4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/x-www-form-urlencoded",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"using\":\"id\",\"value\":\"MinIDChain\"}"
            },
            "url": "http://localhost:9515/session/{{session}}/element"
          },
          "response": []
        },
        {
          "name": "clickonminid",
          "_postman_id": "5e0e7d83-13a8-42bf-86a3-35fcb23a49e3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://localhost:9515/session/{{session}}/element/{{minid_elementid}}/click"
          },
          "response": []
        },
        {
          "name": "getelementidssn",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "189f83ec-8efd-438c-b133-0fbc201abad0",
                "exec": [
                  "var jsonData = pm.response.json();",
                  " pm.globals.set(\"ssn_elementid\", jsonData.value.ELEMENT);",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "e96f13c4-bed0-49ce-878b-0b2816135cf0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"using\":\"id\",\"value\":\"input_USERNAME_IDPORTEN\"}"
            },
            "url": "http://localhost:9515/session/{{session}}/element"
          },
          "response": []
        },
        {
          "name": "getelementidpassword",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8929c791-35e2-41f7-8b0b-8678e9309e58",
                "exec": [
                  "var jsonData = pm.response.json();",
                  " pm.globals.set(\"password_elementid\", jsonData.value.ELEMENT);",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "429cbe69-2290-4459-a4c4-8ea4d4c9817b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"using\":\"id\",\"value\":\"input_PASSWORD_IDPORTEN\"}"
            },
            "url": "http://localhost:9515/session/{{session}}/element"
          },
          "response": []
        },
        {
          "name": "setssn",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "e65befc8-4e49-43f6-a2bc-3ebfdc77a6dc",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "fbe28e61-c250-4751-b44c-6391270288f7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"value\":[\"{{ssn}}\"]}"
            },
            "url": "http://localhost:9515/session/{{session}}/element/{{ssn_elementid}}/value"
          },
          "response": []
        },
        {
          "name": "setpassword",
          "_postman_id": "2652e36e-8077-4eee-a532-812fe063c5cd",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"value\":[\"password01\"]}"
            },
            "url": "http://localhost:9515/session/{{session}}/element/{{password_elementid}}/value"
          },
          "response": []
        },
        {
          "name": "submit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d4ee6a6d-0d1e-4948-aaa6-a2829f185475",
                "exec": [
                  "pm.test(\"next_elementid\", function () {",
                  "    var jsonData = pm.response.json();",
                  " pm.globals.set(\"next_elementid\", jsonData.value.ELEMENT);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "cfcb34e6-e6f5-4e23-a929-9c97a01fa422",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"using\":\"id\",\"value\":\"nextbtn\"}"
            },
            "url": "http://localhost:9515/session/{{session}}/element"
          },
          "response": []
        },
        {
          "name": "clicksubmit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e75ea17b-88ea-4c32-b35f-8758d03c48c1",
                "exec": [
                  "setTimeout(checkStatusCode, 500);\r",
                  "\r",
                  "    function checkStatusCode() {\r",
                  "\r",
                  "        pm.sendRequest('https://postman-echo.com/get', function (err, res) {\r",
                  "\r",
                  "            tests['status code should be 200']= res.code ===200;\r",
                  "\r",
                  "        });\r",
                  "    }"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ce929dc2-7e62-4940-a223-a872f3cc74b3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://localhost:9515/session/{{session}}/element/{{next_elementid}}/click"
          },
          "response": []
        },
        {
          "name": "pinnumberid",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "49f2b57c-29a8-41bf-9041-7400083bf039",
                "exec": [
                  "pm.test(\"pin_elementid\", function () {",
                  "    var jsonData = pm.response.json();",
                  " pm.globals.set(\"pin_elementid\", jsonData.value.ELEMENT);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "25d03f0a-d4f3-438d-a58f-e140587e22db",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"using\":\"id\",\"value\":\"input_PINCODE1_IDPORTEN\"}"
            },
            "url": "http://localhost:9515/session/{{session}}/element"
          },
          "response": []
        },
        {
          "name": "setppin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95b50532-96b7-405c-afd1-52b576a70e9f",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "102e7bd9-2ae1-48d7-81ee-5de3eedb2f74",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"value\":[\"12345\"]}"
            },
            "url": "http://localhost:9515/session/{{session}}/element/{{pin_elementid}}/value"
          },
          "response": []
        },
        {
          "name": "getsubmitid",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "02b4c223-cb45-4310-b064-d60510887571",
                "exec": [
                  "pm.test(\"submit_elementid\", function () {",
                  "    var jsonData = pm.response.json();",
                  " pm.globals.set(\"submit_elementid\", jsonData.value.ELEMENT);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "48170c64-4360-4198-80e8-3c04025f1fe6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"using\":\"id\",\"value\":\"nextbtn\"}"
            },
            "url": "http://localhost:9515/session/{{session}}/element"
          },
          "response": []
        },
        {
          "name": "finalsubmit ",
          "_postman_id": "272b65b6-4224-459a-a694-28f3e7591a35",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://localhost:9515/session/{{session}}/element/{{submit_elementid}}/click"
          },
          "response": []
        },
        {
          "name": "getconsentid",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "02b4c223-cb45-4310-b064-d60510887571",
                "exec": [
                  "pm.test(\"consent_elementid\", function () {",
                  "    var jsonData = pm.response.json();",
                  " pm.globals.set(\"consent_elementid\", jsonData.value.ELEMENT);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "df1fc91d-b179-40f0-9a52-ff8f999ebcb8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"using\":\"name\",\"value\":\"consentAccepted\"}"
            },
            "url": "http://localhost:9515/session/{{session}}/element"
          },
          "response": []
        },
        {
          "name": "acceptconsent",
          "_postman_id": "67196fc1-6d63-42d9-aa4b-4f2c31360761",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "file",
              "file": {
                "src": ""
              }
            },
            "url": "http://localhost:9515/session/{{session}}/element/{{consent_elementid}}/click"
          },
          "response": []
        },
        {
          "name": "gettokenid",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "02b4c223-cb45-4310-b064-d60510887571",
                "exec": [
                  "pm.test(\"token_elementid\", function () {",
                  "    var jsonData = pm.response.json();",
                  " pm.globals.set(\"token_elementid\", jsonData.value.ELEMENT);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "6c0fb2e0-6774-4751-8c89-705f03d8707d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"using\":\"id\",\"value\":\"get-tokens\"}"
            },
            "url": "http://localhost:9515/session/{{session}}/element"
          },
          "response": []
        },
        {
          "name": "henttoken",
          "_postman_id": "23c780b1-f9e7-461d-b602-c26447a38e71",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "file",
              "file": {}
            },
            "url": "http://localhost:9515/session/{{session}}/element/{{token_elementid}}/click"
          },
          "response": []
        },
        {
          "name": "getTokensElements",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "02b4c223-cb45-4310-b064-d60510887571",
                "exec": [
                  "pm.test(\"tokens\", function () {",
                  " var jsonData = pm.response.json();",
                  " console.log('tokens test jsonData',jsonData);",
                  " var tokens=jsonData.value;",
                  "  console.log('tokens test tokens',tokens);",
                  " var temptoken=tokens.split('access_token:').pop();",
                  "   console.log('tokens test temptoken',temptoken);",
                  " var refreshtokenpos=temptoken.lastIndexOf(\"refresh_token:\");",
                  "    console.log('tokens test refreshtokenpos',refreshtokenpos);",
                  " var token = temptoken.substring(1,refreshtokenpos-1);    ",
                  " pm.environment.set(\"krrtoken\", token);",
                  "     console.log('krrtoken test token',token);",
                  "console.log('krrtoken',pm.environment.get(\"krrtoken\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "c0df98c1-4b0f-4bf6-8254-0f633013476d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://localhost:9515/session/{{session}}/source"
          },
          "response": []
        }
      ],
      "_postman_id": "1e26fffa-0f61-4e1c-868c-36c593375571"
    },
    {
      "name": "Person for \u00e5 Teste Doc",
      "item": [
        {
          "name": "/person (oppdatere spr\u00e5kpreferanse)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9f6affba-9c48-4eb7-a53f-86d74a481c2e",
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "94fdb707-1c58-45c0-8840-cac9b972ec6a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{krrtoken}}"
              }
            },
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"spraak\": \"en\"\r\n}"
            },
            "url": "{{krr_oauth2_server}}/rest/v1/person"
          },
          "response": []
        },
        {
          "name": "/person",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eaf0544a-3e81-48db-be6e-47a894a76638",
                "exec": [
                  "pm.test(\"Test will check ssn\", function () {",
                  "    var jsonData = pm.response.json();",
                  "",
                  "    pm.expect(jsonData.personidentifikator).to.eql(pm.environment.get(\"ssn\"));",
                  "   pm.expect(jsonData.reservasjon).to.eql(\"NEI\");",
                  "      pm.expect(jsonData.status).to.eql(\"AKTIV\");",
                  "        ",
                  "      ",
                  "});",
                  "",
                  "pm.test(\"response must be valid and have a body\", function () {",
                  "     // assert that the status code is 200",
                  "     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
                  "     // assert that the response has a valid JSON body",
                  "     pm.response.to.be.withBody;",
                  "     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
                  "});",
                  "",
                  "tests[\"personidentifikator is present\"]=responseBody.has(\"personidentifikator\");",
                  "tests[\"reservasjon is present\"]=responseBody.has(\"reservasjon\");",
                  "tests[\"status is present\"]=responseBody.has(\"status\");",
                  "tests[\"spraak is present\"]=responseBody.has(\"spraak\");",
                  "tests[\"epostadresse is present\"]=responseBody.has(\"epostadresse\");",
                  "tests[\"epostadresse_oppdatert is present\"]=responseBody.has(\"epostadresse_oppdatert\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "0f76982b-f6aa-4d7b-a807-99a72b1f8072",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{krrtoken}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{krr_oauth2_server}}/rest/v1/person/"
          },
          "response": []
        }
      ],
      "_postman_id": "79b29ad1-8cbf-45b2-807c-98791888edda"
    },
    {
      "name": "Personer",
      "item": [
        {
          "name": "/personer (1000 stk)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2805a595-98a3-4867-b27c-1ece60353155",
                "exec": [
                  "pm.test(\"KRR personer 1 \", function () {\r",
                  "        var jsonData = pm.response.json();\r",
                  "        \r",
                  "        pm.expect(jsonData.personer[0].personidentifikator).to.eql(pm.environment.get(\"ssn\"));\r",
                  "        pm.expect(jsonData.personer[0].reservasjon).to.eql(\"NEI\");\r",
                  "        pm.expect(jsonData.personer[0].status).to.eql(\"AKTIV\");\r",
                  "      //  pm.expect(jsonData.personer[0].spraak).to.eql(\"en\");  \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"KRR personer 2 \", function () {\r",
                  "        var jsonData = pm.response.json();\r",
                  "        \r",
                  "        pm.expect(jsonData.personer[1].personidentifikator).to.eql(\"23079403083\");\r",
                  "        \r",
                  " \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"KRR personer 3 \", function () {\r",
                  "        var jsonData = pm.response.json();\r",
                  "        \r",
                  "        pm.expect(jsonData.personer[2].personidentifikator).to.eql(\"23079402966\");\r",
                  "        \r",
                  " \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"KRR personer 4 \", function () {\r",
                  "            var jsonData = pm.response.json();\r",
                  "            \r",
                  "            pm.expect(jsonData.personer[3].personidentifikator).to.eql(\"23079402885\");\r",
                  "            pm.expect(jsonData.personer[3].status).to.eql(\"AKTIV\");\r",
                  "            pm.expect(jsonData.personer[3].reservasjon).to.eql(\"NEI\");\r",
                  " \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"KRR personer 5 \", function () {\r",
                  "            var jsonData = pm.response.json();\r",
                  "            \r",
                  "            pm.expect(jsonData.personer[4].personidentifikator).to.eql(\"23079402613\");\r",
                  "            pm.expect(jsonData.personer[4].status).to.eql(\"AKTIV\");\r",
                  "            pm.expect(jsonData.personer[4].reservasjon).to.eql(\"NEI\");\r",
                  " \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"KRR personer 6 \", function () {\r",
                  "            var jsonData = pm.response.json();\r",
                  "            \r",
                  "            pm.expect(jsonData.personer[5].personidentifikator).to.eql(\"23079402532\");\r",
                  "            \r",
                  "            \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"response must be valid and have a body\", function () {\r",
                  "     // assert that the status code is 200\r",
                  "     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
                  "     // assert that the response has a valid JSON body\r",
                  "     pm.response.to.be.withBody;\r",
                  "     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
                  "});\r",
                  "\r",
                  "tests[\"personidentifikator is present\"]=responseBody.has(\"personidentifikator\");\r",
                  "tests[\"reservasjon is present\"]=responseBody.has(\"reservasjon\");\r",
                  "tests[\"status is present\"]=responseBody.has(\"status\");\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ed090b20-5aec-41b1-a82b-deca61ec59e8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{krrtoken}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"personidentifikatorer\": [\r\n    {{ssn}},\"23079403083\",\"23079402966\",\"23079402885\",\"23079402613\",\"23079402532\"\r\n  ]\r\n}"
            },
            "url": "{{krr_oauth2_server}}/rest/v1/personer"
          },
          "response": []
        }
      ],
      "_postman_id": "a2c2a408-1e55-41d3-88cd-207f1cc04898"
    },
    {
      "name": "Sertifikat",
      "item": [
        {
          "name": "/printSertifikat",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cb6dbdf4-e778-449f-9d17-7b4845b70fc8",
                "exec": [
                  "pm.test(\"response must be valid and have a body\", function () {",
                  "     // assert that the status code is 200",
                  "     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
                  "     // assert that the response has a valid JSON body",
                  "     pm.response.to.be.withBody;",
                  "     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
                  "});",
                  "",
                  "pm.test(\"Attribute postkasseleverandoerAdresse has correct value <printserver> \", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.postkasseleverandoerAdresse).to.eql(\"printserver\");",
                  "});",
                  "",
                  "pm.test(\"Attribute <x509Sertifikat has correct value <sertifikat> \", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.x509Sertifikat).to.eql(\"MIIDXTCCAkWgAwIBAgIJAOyYwbdZq9oMMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwHhcNMTQwMjI0MjExMTI2WhcNNDEwNzExMjExMTI2WjBFMQswCQYDVQQGEwJBVTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA497PlWbc7g85TK0ln4tCjPvlh2rhKHOtpJ9Gas3Qa7vJO1tkzWp3ZmBFfMG8\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "7b4d666c-4b44-45c5-91cd-4f68a447433c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{krr_oauth2_server}}/rest/v1/printSertifikat"
          },
          "response": []
        }
      ],
      "_postman_id": "6be1f87c-44b2-4d2f-a8d8-4ee331315758"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": {
      "token": "{{krrtoken}}"
    }
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "49facd6d-ef4e-43c1-8643-fe53ac2aabd9",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "149a59fa-622e-417c-8a87-2be5faee847f",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}